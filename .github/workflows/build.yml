name: "Main / Pull requests build"
on:
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
        branches: [ main ]
    push:
        branches:
            - main
    workflow_dispatch:

env:
  SonatypeUrl: 'https://kxo2vif9dm-nxiq.sonatype-se.com/'
  SonatypeAppId: WebGoat-WorldPay__acpcreation
  SonatypeStage: 'build' 
  SonatypeScanTarget: '.'
  SONATYPE_USER: 'zzc6QU3e'
  SONATYPE_PASSWORD: 'DtKeXrkbVlX4z878UopHCeaqGyCbGckBZntNoHRum4nQ'
  

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                # os: [ windows-latest, ubuntu-latest, macos-13 ]
            max-parallel: 1
        steps:
            -   uses: actions/checkout@v4.1.6
            -   name: Set up JDK 21
                uses: actions/setup-java@v4.2.1
                with:
                    distribution: 'temurin'
                    java-version: 21
                    architecture: x64
            -   name: Cache Maven packages
                uses: actions/cache@v4.1.0
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-
            -   name: Build with Maven
                run: mvn --no-transfer-progress verify

            - name: Sonatype Lifecycle SCA Scan
              id: evaluate
              uses: sonatype/actions/evaluate@v1
              with:
                iq-server-url: ${{ env.SonatypeUrl }}
                username: ${{ env.SONATYPE_USER }}
                password: ${{ env.SONATYPE_PASSWORD }}
                application-id: ${{ env.SonatypeAppId }}
                stage: ${{ env.SonatypeStage }}
                scan-targets: ${{ env.SonatypeScanTarget }}
        
            # - name: Retrieve Sonatype SBOM (SPDX)
            #   uses: sonatype/actions/fetch-sbom@v1
            #   if: ( success() || failure() ) && steps.evaluate.outputs.scan-id
            #   with:
            #     iq-server-url: ${{ env.SonatypeUrl }}
            #     username: ${{ secrets.SONATYPE_USER }}
            #     password: ${{ secrets.SONATYPE_PASSWORD }}
            #     application-id: ${{ env.SonatypeAppId }}
            #     scan-id: ${{ steps.evaluate.outputs.scan-id }}
            #     sbom-standard: spdx
            #     sbom-version: 2.3
            #     artifact-name: ${{ env.SonatypeAppId }}-${{ env.SonatypeStage }}-sbom
